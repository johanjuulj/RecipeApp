@model AddIngredientViewModel


@{
    ViewData["Title"] = "Add Ingredient to Recipe";
}


<h1>Add ingredients to @Model.Recipe.Name </h1>

<h3>    These are the ones you can add </h3>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Recipe.Name" class="control-label"></label>

            </div>

            <div class="form-group">
                <label asp-for="Recipe.Kitchen" class="control-label"></label>
                <select asp-for="Recipe.Kitchen" asp-items="Html.GetEnumSelectList<Cuisine>()" name="simpleSelect2" class="form-control" id="simpleSelect2"></select>

                <span asp-validation-for="Recipe.Kitchen" class="text-danger"></span>
            </div>

            <div>
                <input id="btnAdd" type="button" value="Add More Ingredients" onclick="AddTextBox()" />
                <br />
                <br />
                <div id="TextBoxContainer">
                    <!--Textboxes will be added here -->
                </div>
                <br />
                <asp:Button ID="btnPost" runat="server" Text="Post" OnClick="Post" />


            </div>



            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>






        </form>
        <h1>@Model.NumerOfIngredients</h1>
        @for (int i = 0; i < Model.NumerOfIngredients; i++)
        {
    <div class="form-group">
        <label class="control-label"> Select an ingredient</label>
        <!--   <select asp-for="Ingredients" asp-items="Html.GetEnumSelectList<Cuisine>()" name="simpleSelect2" class="form-control" id="simpleSelect2"></select> -->
        @Html.DropDownListFor(m => m.Ingredients,
      Model.Ingredients.Select(p => new SelectListItem { Text = p.Name }))
        <span asp-validation-for="Recipe.Kitchen" class="text-danger"></span>
    </div>
        }


        @foreach (var ingredient in Model.Ingredients)
        {
            <h1> @ingredient.Name </h1>
        }

     


        @section Scripts
{

            <script type="text/javascript">
                function GetDynamicTextBox(value) {
                    return '<input name = "DynamicTextBox" type="text" value = "' + value + '" />' +
                        '<input type="button" value="Remove" onclick = "RemoveTextBox(this)" />' +
                        '<select asp-for="Ingredients" asp-items="Html.GetEnumSelectList<Ingredients>()" name="simpleSelect2" class="form-control" id="simpleSelect2"></select>'

                }
                function AddTextBox() {
                    var div = document.createElement('DIV');
                    div.innerHTML = GetDynamicTextBox("");
                    document.getElementById("TextBoxContainer").appendChild(div);
                }

                function RemoveTextBox(div) {
                    document.getElementById("TextBoxContainer").removeChild(div.parentNode);
                }

                function RecreateDynamicTextboxes() {
                    var values = eval('<%=Values%>');
                    if (values != null) {
                        var html = "";
                        for (var i = 0; i < values.length; i++) {
                            html += "<div>" + GetDynamicTextBox(values[i]) + "</div>";
                        }
                        document.getElementById("TextBoxContainer").innerHTML = html;
                    }
                }
                window.onload = RecreateDynamicTextboxes;
            </script>
            <script src="~/lib/select2/js/select2.full.min.js"></script>
            <script src="~/js/select2.js"></script>

        }
